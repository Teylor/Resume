@import "base/colors";
@import "base/animations";
@import "common/common";
@import "about/about";
@import "experience/experience";

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right,
      rgba(95, 95, 95, 0.2),
      rgba(0, 0, 0, 0.9)
    ),
    url("../img/header.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  font-family: "Nunito", sans-serif;
  color: $color-yellow;

  .header-title {
    a {
      text-decoration: none;
      color: $color-yellow;
      animation: animate--about-intro 1.5s ease-in-out;
      transition: $animate--about-hover;
      position: absolute;
      left: 15%;
      top: 40%;
      font-size: 40px;
      &::before,
      &::after {
        content: "";
        position: absolute;
        bottom: -1px;
        width: 1px;
        height: 3px;
        transition: $animate--about-hover;
        transition-duration: 0.75s;
        opacity: 0;
      }
      &::before {
        left: calc(40%);
        background-color: $color-yellow;
      }
      &::after {
        right: calc(40%);
        background-color: $color-yellow;
      }
    }

    &:hover {
      cursor: pointer;
      a {
        &::before,
        &::after {
          width: 70%;
          opacity: 1;
        }
      }
    }
  }

  .header-subtitle {
    animation: animate--about-subtitle 1.5s ease-in-out;
    position: absolute;
    left: 15%;
    top: 50%;
    font-size: 60px;
  }

  .header-legend {
    animation: animate--about-legend 3s ease-in-out;
    position: absolute;
    left: 15%;
    top: 65%;
    font-size: 20px;
  }
}

.navbar {
  background-color: $color-green;
  height: 5vh;
  position: sticky;
  top: 0;
  z-index: 1;

  ul {
    list-style: none;
    margin: 20px;
  }

  ul li {
    display: inline;
    margin: 30px;
  }

  ul li a {
    color: white;
    font-size: 20px;
  }

  ul li a.active {
    color: black;
    font-size: 20px;
  }
}

#about {
  height: 100vh;
  padding-top: 40px;
  background-color: $color-blue;
}

#skills {
  height: 100vh;
  padding-top: 40px;
  background-color: $color-black;
  position: relative;
}
.skills--languages {
  span {
    color: $color-green;
    font-family: "Times New Roman", Times, serif;
    font-size: 30px;
    position: relative;
  }
  .skills--languages-php {
    .php-title {
      color: $color-yellow;
    }
    .php-percentatge {
      color: $color-green;
    }
  }
}

#experience {
  height: 100vh;
  padding-top: 40px;
  background-color: $color-blue;
}

/* -------CHARTS--------- */
$configs: (
  chart-php: (
    svgSize: 200px,
    externalPercentage: 50,
    internalPercentage: 75,
    externalWidth: 10px,
    internalWidth: 20px,
    externalBackgroundColor: $color-green,
    externalPercentatgeColor: $color-green-light,
    internalBackgroundColor: $color-red,
    internalPercentatgeColor: $color-red-light,
    labelFontSize: 2.5rem,
    duration: 3s,
    animationDelay: 0.5s
  ),
  chart-js: (
    svgSize: 200px,
    externalPercentage: 80,
    internalPercentage: 20,
    externalWidth: 10px,
    internalWidth: 20px,
    externalBackgroundColor: $color-green,
    externalPercentatgeColor: $color-green-light,
    internalBackgroundColor: $color-red,
    internalPercentatgeColor: $color-red-light,
    labelFontSize: 2.5rem,
    duration: 3s,
    animationDelay: 0.5s
  )
);

$pi: 3.14;
$labelData: "";
@for $i from 0 to 101 {
  $labelData: $labelData + $i + "%" + "\a";
}

@each $chart, $param in $configs {
  $s: (map-get($param, svgSize) - map-get($param, externalWidth)) * $pi;
  $e: (map-get($param, svgSize) - map-get($param, internalWidth)) * $pi;
  $sOffSet: (map-get($param, externalPercentage) / 100) * $s;
  $eOffSet: (map-get($param, internalPercentage) / 100) * $e;

  .#{$chart} {
    width: map-get($param, svgSize);
    height: map-get($param, svgSize);
    margin: 0;
    position: relative;
    left: 25%;

    &.animate-external {
      svg .circle--external-background {
        animation: chart-offset map-get($param, duration) ease-in-out forwards;
        animation-delay: map-get($param, animationDelay);
      }
      percentatge--external::after {
        animation: #{$chart}-external
          map-get($param, duration)
          steps(map-get($param, externalPercentage))
          forwards;
        animation-delay: map-get($param, animationDelay);
      }
      percentatge--internal::after {
        animation: #{$chart}-internal
          map-get($param, duration)
          steps(map-get($param, internalPercentage))
          forwards;
        animation-delay: map-get($param, animationDelay);
      }
    }

    &.animate-internal {
      svg .circle--internal-background {
        animation: chart-offset map-get($param, duration) ease-in-out forwards;
        animation-delay: map-get($param, animationDelay);
      }
    }

    svg {
      width: 100%;
      height: 100%;
      .circle--external-background {
        r: (map-get($param, svgSize) - map-get($param, externalWidth))/2;
        cx: 50%;
        cy: 50%;
        fill: none;
        stroke: map-get($param, externalBackgroundColor);
        stroke-width: map-get($param, externalWidth);
      }
      .circle--external-percentatge {
        @extend .circle--external-background;
        stroke: map-get($param, externalPercentatgeColor);
        stroke-dasharray: $sOffSet $s;
        stroke-dashoffset: $sOffSet;
        stroke-linecap: round;
        transform-origin: 50% 50%;
        transform: rotate(-90deg);
      }
      .circle--internal-background {
        r: (map-get($param, svgSize) - map-get($param, internalWidth))/2;
        cx: 50%;
        cy: 50%;
        fill: none;
        stroke: map-get($param, internalBackgroundColor);
        stroke-width: map-get($param, externalWidth) - 3;
      }
      .circle--internal-percentatge {
        @extend .circle--internal-background;
        stroke: map-get($param, internalPercentatgeColor);
        stroke-dasharray: $eOffSet $e;
        stroke-dashoffset: $eOffSet;
        stroke-linecap: round;
        transform-origin: 50% 50%;
        transform: rotate(-90deg);
      }
    }
    percentatge--external {
      display: inline-block;
      width: 100%;
      height: map-get($param, labelFontSize);
      overflow: hidden;
      text-align: center;
      color: map-get($param, externalPercentatgeColor);
      position: absolute;
      top: calc(40% - #{map-get($param, labelFontSize) / 2});
      left: 0;
      font-size: 0;
      &::after {
        display: inline-block;
        content: $labelData;
        white-space: pre;
        font-size: map-get($param, labelFontSize);
        line-height: map-get($param, labelFontSize);
      }
    }
    percentatge--internal {
      display: inline-block;
      width: 100%;
      height: map-get($param, labelFontSize);
      overflow: hidden;
      text-align: center;
      color: map-get($param, internalPercentatgeColor);
      position: absolute;
      top: calc(60% - #{map-get($param, labelFontSize) / 2});
      left: 0;
      font-size: 0;
      &::after {
        display: inline-block;
        content: $labelData;
        white-space: pre;
        font-size: map-get($param, labelFontSize);
        line-height: map-get($param, labelFontSize);
      }
    }

    .percentatge--external-tooltip {
      visibility: hidden;
      width: 84px;
      height: 22px;
      bottom: 73%;
      left: 58%;
      margin-left: -60px;
      background-color: map-get($param, externalBackgroundColor);
      color: map-get($param, externalPercentatgeColor);
      font-size: 15px;
      text-align: center;
      border-radius: 6px;
      position: absolute;
      z-index: 1;
    }
    &:hover .percentatge--external-tooltip {
      visibility: visible;
    }

    .percentatge--internal-tooltip {
      visibility: hidden;
      width: 84px;
      height: 22px;
      top: 73%;
      left: 58%;
      margin-left: -60px;
      background-color: map-get($param, internalBackgroundColor);
      color: map-get($param, internalPercentatgeColor);
      font-size: 15px;
      text-align: center;
      border-radius: 6px;
      position: absolute;
      z-index: 1;
    }
    &:hover .percentatge--internal-tooltip {
      visibility: visible;
    }
  }

  @keyframes #{$chart}-external {
    100% {
      transform: translateY(
        map-get($param, labelFontSize) *
          (-(map-get($param, externalPercentage)))
      );
    }
  }
  @keyframes #{$chart}-internal {
    100% {
      transform: translateY(
        map-get($param, labelFontSize) *
          (-(map-get($param, internalPercentage)))
      );
    }
  }
}
